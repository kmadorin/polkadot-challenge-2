{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","LatestBlock.js","BlockSearch.js","App.js","index.js"],"names":["configEnv","require","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","types","CUSTOM_TYPES","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","LatestBlock","useState","blockNumber","setBlockNumber","bestNumber","derive","chain","useEffect","unsubscribeAll","number","toNumber","unsub","catch","BlockSearch","searchValue","setSearchValue","blockInfo","setBlockInfo","ErrorText","setErrorText","Form","onSubmit","e","startsWith","getBlock","res","JSON","stringify","getBlockHash","toString","FormField","placeholder","onChange","target","Button","primary","Message","negative","compact","floating","header","Main","text","Grid","centered","columns","padded","Column","content","Dimmer","active","Loader","size","contextRef","createRef","ref","style","marginTop","Container","Header","as","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4bc4766.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\nimport queryString from 'query-string';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\nconst parsedQuery = queryString.parse(window.location.search);\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\nconsole.log(`Connected socket: ${connectedSocket}`);\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.CUSTOM_TYPES,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }));\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts);\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key]);\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return <SubstrateContext.Provider value={state}>\n    {props.children}\n  </SubstrateContext.Provider>;\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","import React, { useEffect, useState } from 'react';\nimport { useSubstrate } from './substrate-lib';\n\nconst LatestBlock = (props) => {\n  const { api } = useSubstrate();\n  const [blockNumber, setBlockNumber] = useState(0);\n\n  const bestNumber = api.derive.chain.bestNumber;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber());\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n    return () => unsubscribeAll && unsubscribeAll();\n\n  }, [bestNumber]);\n\n  return <div>Latest block: {blockNumber}</div>;\n};\n\nexport default LatestBlock;\n","import React, {useEffect, useState} from 'react';\nimport {useSubstrate} from './substrate-lib';\nimport 'semantic-ui-css/semantic.min.css';\nimport {Button, Form, FormField, Message} from 'semantic-ui-react';\n\n\nconst BlockSearch = (props) => {\n\tconst {api} = useSubstrate();\n\n\tconst [searchValue, setSearchValue] = useState('');\n\tconst [blockInfo, setBlockInfo] = useState('');\n\tconst [ErrorText, setErrorText] = useState('');\n\n\tfunction handleSubmit(e) {\n\t\tsetErrorText('');\n\t\tsetBlockInfo('');\n\t\tif (searchValue.startsWith('0x')) {\n\t\t\tapi.rpc.chain.getBlock(searchValue)\n\t\t\t\t.then(res => setBlockInfo(JSON.stringify(res, null, 2)))\n\t\t\t\t.catch(e => setErrorText(e));\n\t\t} else {\n\t\t\tapi.rpc.chain.getBlockHash(searchValue)\n\t\t\t\t.then(res => api.rpc.chain.getBlock(res.toString()))\n\t\t\t\t.then(res => setBlockInfo(JSON.stringify(res, null, 2)))\n\t\t\t\t.catch(e => setErrorText(e));\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t<FormField>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\tplaceholder=\"Block hash or number\"\n\t\t\t\t\t\tvalue={searchValue}\n\t\t\t\t\t\tonChange={(e) => setSearchValue(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</FormField>\n\t\t\t\t<Button type=\"submit\" primary>Find block</Button>\n\t\t\t</Form>\n\t\t\t{blockInfo && (\n\t\t\t\t<pre>\n\t\t\t\t{blockInfo}\n\t\t\t</pre>)}\n\t\t\t{ErrorText && (<Message\n\t\t\t\tnegative compact floating\n\t\t\t\theader='Wrong block hash or number'\n\t\t\t/>)}\n\t\t</div>\n\t)\n}\n\nexport default BlockSearch;","import React, {createRef} from 'react';\nimport {Container, Dimmer, Loader, Grid, Message, Header} from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport {SubstrateContextProvider, useSubstrate} from './substrate-lib';\nimport LatestBlock from './LatestBlock';\nimport BlockSearch from \"./BlockSearch\";\n\nfunction Main() {\n\tconst {apiState, apiError, socket} = useSubstrate();\n\n\tconst loader = text =>\n\t\t<Dimmer active>\n\t\t\t<Loader size='small'>{text}</Loader>\n\t\t</Dimmer>;\n\n\tconst message = err =>\n\t\t<Grid centered columns={2} padded>\n\t\t\t<Grid.Column>\n\t\t\t\t<Message\n\t\t\t\t\tnegative compact floating\n\t\t\t\t\theader='Error Connecting to Substrate'\n\t\t\t\t\tcontent={`${err}`}\n\t\t\t\t/>\n\t\t\t</Grid.Column>\n\t\t</Grid>;\n\n\tif (apiState === 'ERROR') return message(apiError);\n\telse if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n\tconst contextRef = createRef();\n\n\treturn (\n\t\t<div ref={contextRef} style={{marginTop: \"20px\"}}>\n\t\t\t<Container>\n\t\t\t\t<Header as='h3'>Connected to: &nbsp; {socket}</Header>\n\t\t\t\t<Header as='h1'><LatestBlock/></Header>\n\t\t\t\t<BlockSearch/>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default function App() {\n\treturn (\n\t\t<SubstrateContextProvider>\n\t\t\t<Main/>\n\t\t</SubstrateContextProvider>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}